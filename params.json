{"name":"CShell","tagline":"A simple, yet powerful, C# scripting IDE","body":"### What is CShell?\r\nCShell is a C# scripting environment. It allows you to use C# without any fluff right in a console like environment (REPL). Your code is directly evaluated and executed in the editor, no separate executable has to be compiled and then run in a different process. More elaborate code can be written in a C# script and then evaluated as one file, only one line, or a selection. Then, your results can be easily dumped to HTML (like LINQPad) or viewed as a data grid or plotted to a chart.\r\n\r\nCShell is perfect to explore data and quickly drill deeper into information since you can write one line of code, evaluate it, check out the results, and then write some more code, evaluate it again, and so forth.\r\n\r\nAlso just want to test one or two lines of C# code without creating a new console project in Visual Studio? Just fire up CShell, type the code you wanna test and you immediately can see if it works the way you want.\r\n\r\n\r\n### Why CShell?\r\nWe've developed CShell because we needed it for ourselves. Visual Studio was often too heavy weight and LINQPad has no REPL loop. What if you load 2-3 GB of data and then wanna start exploring it, without having to load all the data every time the program is executed? With a REPL loop this is possible. Also we felt the time is ready for a more mature C# scripting environment with projects like NRefactory, Mono.CSharp and Roslyn quickly filling the gaps that remained to realize such a project.\r\n\r\n### Authors and Contributors\r\nCShell is a project sponsored and maintained by [Arnova Asset Management Ltd.](https://arnova.com), a quant hege fund and mainly implemented by @lukebuehler.\r\n\r\n### Licence\r\nCShell is released under the GPL 3.0 license. ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}
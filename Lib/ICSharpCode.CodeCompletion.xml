<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ICSharpCode.CodeCompletion</name>
    </assembly>
    <members>
        <member name="M:ICSharpCode.CodeCompletion.CodeTextEditor.GetCompletionDocument(System.Int32@)">
            <summary>
            Gets the document used for code completion, can be overridden to provide a custom document
            </summary>
            <param name="offset"></param>
            <returns>The document of this text editor.</returns>
        </member>
        <member name="M:ICSharpCode.CodeCompletion.CSharpCompletionContext.#ctor(ICSharpCode.NRefactory.Editor.IDocument,System.Int32,ICSharpCode.NRefactory.TypeSystem.IProjectContent,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ICSharpCode.CodeCompletion.CSharpCompletionContext"/> class.
            </summary>
            <param name="document">The document, make sure the FileName property is set on the document.</param>
            <param name="offset">The offset.</param>
            <param name="projectContent">Content of the project.</param>
            <param name="usings">The usings.</param>
        </member>
        <member name="M:ICSharpCode.CodeCompletion.DataItems.EntityCompletionData.GetText(ICSharpCode.NRefactory.TypeSystem.IEntity)">
            <summary>
            Converts a member to text.
            Returns the declaration of the member as C# or VB code, e.g.
            "public void MemberName(string parameter)"
            </summary>
        </member>
        <member name="T:ICSharpCode.CodeCompletion.DataItems.ImportCompletionData">
            <summary>
            Completion item that introduces a using declaration.
            </summary>
        </member>
        <member name="T:ICSharpCode.CodeCompletion.DataItems.OverrideCompletionData">
            <summary>
            Item for 'override' completion.
            </summary>
        </member>
        <member name="T:ICSharpCode.CodeCompletion.ICSharpScriptProvider">
            <summary>
            This interface allows to provide more information for scripts such as using statements, etc.
            </summary>
        </member>
        <member name="T:ICSharpCode.CodeCompletion.SegmentTrackingOutputFormatter">
            <summary>
            Output formatter that creates a dictionary from AST nodes to segments in the output text.
            </summary>
        </member>
    </members>
</doc>
